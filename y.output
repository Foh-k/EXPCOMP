Terminals unused in grammar

   BOR


State 39 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 expr: NUM
    2     | ID ASSIGN expr
    3     | expr LOR expr
    4     | expr LAND expr
    5     | expr BLT expr
    6     | expr BEQ expr
    7     | expr BNE expr
    8     | expr ADD expr
    9     | expr SUB expr
   10     | expr MUL expr
   11     | expr DIV expr
   12     | expr MOD expr
   13     | expr BAND expr
   14     | expr XOR expr
   15     | expr LSHIFT expr
   16     | expr RSHIFT expr
   17     | NOT expr
   18     | SUB expr
   19     | BNOT expr
   20     | INC expr
   21     | DEC expr
   22     | ID '(' alist ')'
   23     | '(' expr ')'
   24     | ID

   25 alist: %empty
   26      | expr
   27      | alist ',' expr

   28 st_list: %empty
   29        | st_list stmt

   30 stmt: '{' st_list '}'
   31     | expr ';'
   32     | if_part
   33     | if_part ELSE stmt
   34     | WHILE '(' expr ')' stmt
   35     | RETURN expr ';'

   36 if_part: IF '(' expr ')' stmt

   37 program: global_def
   38        | program global_def

   39 global_def: decl_gvar ';'
   40           | f_head ';'
   41           | func_def

   42 func_def: f_head '{' decl_lvar_list st_list '}'

   43 $@1: %empty

   44 f_head: TINT ID '(' $@1 p_list ')'

   45 p_list: %empty
   46       | p_list_l

   47 p_list_l: decl_par
   48         | p_list_l ',' decl_par

   49 decl_par: TINT ID

   50 decl_lvar_list: %empty
   51               | decl_lvar_list decl_lvar ';'

   52 decl_lvar: TINT ID

   53 decl_gvar: TINT ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22 23 34 36 44
')' (41) 22 23 34 36 44
',' (44) 27 48
';' (59) 31 35 39 40 51
'{' (123) 30 42
'}' (125) 30 42
error (256)
NUM (258) 1
ID (259) 2 22 24 44 49 52 53
IF (260) 36
ELSE (261) 33
WHILE (262) 34
RETURN (263) 35
TINT (264) 44 49 52 53
ASSIGN (265) 2
LOR (266) 3
LAND (267) 4
BLT (268) 5
BEQ (269) 6
BNE (270) 7
ADD (271) 8
SUB (272) 9 18
MUL (273) 10
DIV (274) 11
MOD (275) 12
BAND (276) 13
BOR (277)
XOR (278) 14
LSHIFT (279) 15
RSHIFT (280) 16
NOT (281) 17
UM (282)
BNOT (283) 19
INC (284) 20
DEC (285) 21


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
expr (38)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24, on right: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
    19 20 21 23 26 27 31 34 35 36
alist (39)
    on left: 25 26 27, on right: 22 27
st_list (40)
    on left: 28 29, on right: 29 30 42
stmt (41)
    on left: 30 31 32 33 34 35, on right: 29 33 34 36
if_part (42)
    on left: 36, on right: 32 33
program (43)
    on left: 37 38, on right: 0 38
global_def (44)
    on left: 39 40 41, on right: 37 38
func_def (45)
    on left: 42, on right: 41
f_head (46)
    on left: 44, on right: 40 42
$@1 (47)
    on left: 43, on right: 44
p_list (48)
    on left: 45 46, on right: 44
p_list_l (49)
    on left: 47 48, on right: 46 48
decl_par (50)
    on left: 49, on right: 47 48
decl_lvar_list (51)
    on left: 50 51, on right: 42 51
decl_lvar (52)
    on left: 52, on right: 51
decl_gvar (53)
    on left: 53, on right: 39


State 0

    0 $accept: . program $end

    TINT  shift, and go to state 1

    program     go to state 2
    global_def  go to state 3
    func_def    go to state 4
    f_head      go to state 5
    decl_gvar   go to state 6


State 1

   44 f_head: TINT . ID '(' $@1 p_list ')'
   53 decl_gvar: TINT . ID

    ID  shift, and go to state 7


State 2

    0 $accept: program . $end
   38 program: program . global_def

    $end  shift, and go to state 8
    TINT  shift, and go to state 1

    global_def  go to state 9
    func_def    go to state 4
    f_head      go to state 5
    decl_gvar   go to state 6


State 3

   37 program: global_def .

    $default  reduce using rule 37 (program)


State 4

   41 global_def: func_def .

    $default  reduce using rule 41 (global_def)


State 5

   40 global_def: f_head . ';'
   42 func_def: f_head . '{' decl_lvar_list st_list '}'

    '{'  shift, and go to state 10
    ';'  shift, and go to state 11


State 6

   39 global_def: decl_gvar . ';'

    ';'  shift, and go to state 12


State 7

   44 f_head: TINT ID . '(' $@1 p_list ')'
   53 decl_gvar: TINT ID .

    '('  shift, and go to state 13

    $default  reduce using rule 53 (decl_gvar)


State 8

    0 $accept: program $end .

    $default  accept


State 9

   38 program: program global_def .

    $default  reduce using rule 38 (program)


State 10

   42 func_def: f_head '{' . decl_lvar_list st_list '}'

    $default  reduce using rule 50 (decl_lvar_list)

    decl_lvar_list  go to state 14


State 11

   40 global_def: f_head ';' .

    $default  reduce using rule 40 (global_def)


State 12

   39 global_def: decl_gvar ';' .

    $default  reduce using rule 39 (global_def)


State 13

   44 f_head: TINT ID '(' . $@1 p_list ')'

    $default  reduce using rule 43 ($@1)

    $@1  go to state 15


State 14

   42 func_def: f_head '{' decl_lvar_list . st_list '}'
   51 decl_lvar_list: decl_lvar_list . decl_lvar ';'

    TINT  shift, and go to state 16

    $default  reduce using rule 28 (st_list)

    st_list    go to state 17
    decl_lvar  go to state 18


State 15

   44 f_head: TINT ID '(' $@1 . p_list ')'

    TINT  shift, and go to state 19

    $default  reduce using rule 45 (p_list)

    p_list    go to state 20
    p_list_l  go to state 21
    decl_par  go to state 22


State 16

   52 decl_lvar: TINT . ID

    ID  shift, and go to state 23


State 17

   29 st_list: st_list . stmt
   42 func_def: f_head '{' decl_lvar_list st_list . '}'

    NUM     shift, and go to state 24
    ID      shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    RETURN  shift, and go to state 28
    SUB     shift, and go to state 29
    NOT     shift, and go to state 30
    BNOT    shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34
    '{'     shift, and go to state 35
    '}'     shift, and go to state 36

    expr     go to state 37
    stmt     go to state 38
    if_part  go to state 39


State 18

   51 decl_lvar_list: decl_lvar_list decl_lvar . ';'

    ';'  shift, and go to state 40


State 19

   49 decl_par: TINT . ID

    ID  shift, and go to state 41


State 20

   44 f_head: TINT ID '(' $@1 p_list . ')'

    ')'  shift, and go to state 42


State 21

   46 p_list: p_list_l .
   48 p_list_l: p_list_l . ',' decl_par

    ','  shift, and go to state 43

    $default  reduce using rule 46 (p_list)


State 22

   47 p_list_l: decl_par .

    $default  reduce using rule 47 (p_list_l)


State 23

   52 decl_lvar: TINT ID .

    $default  reduce using rule 52 (decl_lvar)


State 24

    1 expr: NUM .

    $default  reduce using rule 1 (expr)


State 25

    2 expr: ID . ASSIGN expr
   22     | ID . '(' alist ')'
   24     | ID .

    ASSIGN  shift, and go to state 44
    '('     shift, and go to state 45

    $default  reduce using rule 24 (expr)


State 26

   36 if_part: IF . '(' expr ')' stmt

    '('  shift, and go to state 46


State 27

   34 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 47


State 28

   35 stmt: RETURN . expr ';'

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 48


State 29

   18 expr: SUB . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 49


State 30

   17 expr: NOT . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 50


State 31

   19 expr: BNOT . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 51


State 32

   20 expr: INC . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 52


State 33

   21 expr: DEC . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 53


State 34

   23 expr: '(' . expr ')'

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 54


State 35

   30 stmt: '{' . st_list '}'

    $default  reduce using rule 28 (st_list)

    st_list  go to state 55


State 36

   42 func_def: f_head '{' decl_lvar_list st_list '}' .

    $default  reduce using rule 42 (func_def)


State 37

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   31 stmt: expr . ';'

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69
    ';'     shift, and go to state 70


State 38

   29 st_list: st_list stmt .

    $default  reduce using rule 29 (st_list)


State 39

   32 stmt: if_part .
   33     | if_part . ELSE stmt

    ELSE  shift, and go to state 71

    ELSE      [reduce using rule 32 (stmt)]
    $default  reduce using rule 32 (stmt)


State 40

   51 decl_lvar_list: decl_lvar_list decl_lvar ';' .

    $default  reduce using rule 51 (decl_lvar_list)


State 41

   49 decl_par: TINT ID .

    $default  reduce using rule 49 (decl_par)


State 42

   44 f_head: TINT ID '(' $@1 p_list ')' .

    $default  reduce using rule 44 (f_head)


State 43

   48 p_list_l: p_list_l ',' . decl_par

    TINT  shift, and go to state 19

    decl_par  go to state 72


State 44

    2 expr: ID ASSIGN . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 73


State 45

   22 expr: ID '(' . alist ')'

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    $default  reduce using rule 25 (alist)

    expr   go to state 74
    alist  go to state 75


State 46

   36 if_part: IF '(' . expr ')' stmt

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 76


State 47

   34 stmt: WHILE '(' . expr ')' stmt

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 77


State 48

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   35 stmt: RETURN expr . ';'

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69
    ';'     shift, and go to state 78


State 49

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   18     | SUB expr .

    $default  reduce using rule 18 (expr)


State 50

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   17     | NOT expr .

    $default  reduce using rule 17 (expr)


State 51

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   19     | BNOT expr .

    $default  reduce using rule 19 (expr)


State 52

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   20     | INC expr .

    $default  reduce using rule 20 (expr)


State 53

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   21     | DEC expr .

    $default  reduce using rule 21 (expr)


State 54

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   23     | '(' expr . ')'

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69
    ')'     shift, and go to state 79


State 55

   29 st_list: st_list . stmt
   30 stmt: '{' st_list . '}'

    NUM     shift, and go to state 24
    ID      shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    RETURN  shift, and go to state 28
    SUB     shift, and go to state 29
    NOT     shift, and go to state 30
    BNOT    shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34
    '{'     shift, and go to state 35
    '}'     shift, and go to state 80

    expr     go to state 37
    stmt     go to state 38
    if_part  go to state 39


State 56

    3 expr: expr LOR . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 81


State 57

    4 expr: expr LAND . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 82


State 58

    5 expr: expr BLT . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 83


State 59

    6 expr: expr BEQ . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 84


State 60

    7 expr: expr BNE . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 85


State 61

    8 expr: expr ADD . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 86


State 62

    9 expr: expr SUB . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 87


State 63

   10 expr: expr MUL . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 88


State 64

   11 expr: expr DIV . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 89


State 65

   12 expr: expr MOD . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 90


State 66

   13 expr: expr BAND . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 91


State 67

   14 expr: expr XOR . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 92


State 68

   15 expr: expr LSHIFT . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 93


State 69

   16 expr: expr RSHIFT . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 94


State 70

   31 stmt: expr ';' .

    $default  reduce using rule 31 (stmt)


State 71

   33 stmt: if_part ELSE . stmt

    NUM     shift, and go to state 24
    ID      shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    RETURN  shift, and go to state 28
    SUB     shift, and go to state 29
    NOT     shift, and go to state 30
    BNOT    shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34
    '{'     shift, and go to state 35

    expr     go to state 37
    stmt     go to state 95
    if_part  go to state 39


State 72

   48 p_list_l: p_list_l ',' decl_par .

    $default  reduce using rule 48 (p_list_l)


State 73

    2 expr: ID ASSIGN expr .
    3     | expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 2 (expr)


State 74

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   26 alist: expr .

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 26 (alist)


State 75

   22 expr: ID '(' alist . ')'
   27 alist: alist . ',' expr

    ','  shift, and go to state 96
    ')'  shift, and go to state 97


State 76

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   36 if_part: IF '(' expr . ')' stmt

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69
    ')'     shift, and go to state 98


State 77

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   34 stmt: WHILE '(' expr . ')' stmt

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69
    ')'     shift, and go to state 99


State 78

   35 stmt: RETURN expr ';' .

    $default  reduce using rule 35 (stmt)


State 79

   23 expr: '(' expr ')' .

    $default  reduce using rule 23 (expr)


State 80

   30 stmt: '{' st_list '}' .

    $default  reduce using rule 30 (stmt)


State 81

    3 expr: expr . LOR expr
    3     | expr LOR expr .
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 3 (expr)


State 82

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    4     | expr LAND expr .
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 4 (expr)


State 83

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    5     | expr BLT expr .
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 5 (expr)


State 84

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    6     | expr BEQ expr .
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 6 (expr)


State 85

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    7     | expr BNE expr .
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 7 (expr)


State 86

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    8     | expr ADD expr .
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 8 (expr)


State 87

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
    9     | expr SUB expr .
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 9 (expr)


State 88

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   10     | expr MUL expr .
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 10 (expr)


State 89

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   11     | expr DIV expr .
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 11 (expr)


State 90

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   12     | expr MOD expr .
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 12 (expr)


State 91

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   13     | expr BAND expr .
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 13 (expr)


State 92

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   14     | expr XOR expr .
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr

    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 14 (expr)


State 93

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   15     | expr LSHIFT expr .
   16     | expr . RSHIFT expr

    $default  reduce using rule 15 (expr)


State 94

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   16     | expr RSHIFT expr .

    $default  reduce using rule 16 (expr)


State 95

   33 stmt: if_part ELSE stmt .

    $default  reduce using rule 33 (stmt)


State 96

   27 alist: alist ',' . expr

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    SUB   shift, and go to state 29
    NOT   shift, and go to state 30
    BNOT  shift, and go to state 31
    INC   shift, and go to state 32
    DEC   shift, and go to state 33
    '('   shift, and go to state 34

    expr  go to state 100


State 97

   22 expr: ID '(' alist ')' .

    $default  reduce using rule 22 (expr)


State 98

   36 if_part: IF '(' expr ')' . stmt

    NUM     shift, and go to state 24
    ID      shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    RETURN  shift, and go to state 28
    SUB     shift, and go to state 29
    NOT     shift, and go to state 30
    BNOT    shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34
    '{'     shift, and go to state 35

    expr     go to state 37
    stmt     go to state 101
    if_part  go to state 39


State 99

   34 stmt: WHILE '(' expr ')' . stmt

    NUM     shift, and go to state 24
    ID      shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    RETURN  shift, and go to state 28
    SUB     shift, and go to state 29
    NOT     shift, and go to state 30
    BNOT    shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33
    '('     shift, and go to state 34
    '{'     shift, and go to state 35

    expr     go to state 37
    stmt     go to state 102
    if_part  go to state 39


State 100

    3 expr: expr . LOR expr
    4     | expr . LAND expr
    5     | expr . BLT expr
    6     | expr . BEQ expr
    7     | expr . BNE expr
    8     | expr . ADD expr
    9     | expr . SUB expr
   10     | expr . MUL expr
   11     | expr . DIV expr
   12     | expr . MOD expr
   13     | expr . BAND expr
   14     | expr . XOR expr
   15     | expr . LSHIFT expr
   16     | expr . RSHIFT expr
   27 alist: alist ',' expr .

    LOR     shift, and go to state 56
    LAND    shift, and go to state 57
    BLT     shift, and go to state 58
    BEQ     shift, and go to state 59
    BNE     shift, and go to state 60
    ADD     shift, and go to state 61
    SUB     shift, and go to state 62
    MUL     shift, and go to state 63
    DIV     shift, and go to state 64
    MOD     shift, and go to state 65
    BAND    shift, and go to state 66
    XOR     shift, and go to state 67
    LSHIFT  shift, and go to state 68
    RSHIFT  shift, and go to state 69

    $default  reduce using rule 27 (alist)


State 101

   36 if_part: IF '(' expr ')' stmt .

    $default  reduce using rule 36 (if_part)


State 102

   34 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 34 (stmt)
